---
import CollectionsGrid from "~/components/collections-grid.astro";
import FacetsFilter from "~/components/facets-filter.astro";
import ProductsGrid from "~/components/products-grid.astro";
import type { SearchResult } from "~/graphql/_generated";
import type { Collection } from "~/graphql/_generated";
import { sdk } from "~/graphql/sdk";
import BaseLayout from "~/layouts/base.astro";
import { aggregateFacetValues } from "~/utils";

const { slug } = Astro.params;
const facetValueIds = Astro.url.searchParams.getAll("facetValueID");

const colRes = await sdk.getCollection(
  { slug },
  { astroCookies: Astro.cookies }
);

const vals = await sdk.searchFacetValues(
  { input: { collectionSlug: slug } },
  { astroCookies: Astro.cookies }
);

const prodRes = await sdk.search(
  {
    input: {
      collectionSlug: slug,
      groupByProduct: true,
      facetValueFilters: [{ or: facetValueIds || [] }],
      // facetValueFilters: facetValueIds.map((id) => ({ and: id })),
    },
  },
  { astroCookies: Astro.cookies }
);

const facets = aggregateFacetValues(vals.search.facetValues);

const collection = colRes.collection as Collection;
const subCollections = colRes.collection?.children as Array<Collection>;
const products = prodRes.search.items as Array<SearchResult>;
---

<BaseLayout title={collection.name} description={collection.description}>
  <CollectionsGrid collections={subCollections} />
  <div class="mt-6 grid sm:grid-cols-5 gap-x-4">
    <divn class="hidden lg:block">
      <FacetsFilter facets={facets} facetValueIds={facetValueIds} />
    </divn>
    <div class="col-span-1 sm:col-span-5 lg:col-span-4 space-y-6">
      <ProductsGrid products={products} />
    </div>
  </div>
</BaseLayout>
